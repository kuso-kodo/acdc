{
  "swagger": "2.0",
  "info": {
    "description": "Simple API Server.",
    "title": "305E API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {},
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0"
  },
  "host": "localhost:8080",
  "basePath": "/api",
  "paths": {
    "/admin/login": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Perform login.",
        "parameters": [
          {
            "description": "User request",
            "name": "userRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schema.AuthLoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/schema.AuthLoginResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/schema.CommonFailureSchema"
            }
          }
        }
      }
    },
    "/admin/me": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get current user info.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/model.Admin"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/schema.CommonFailureSchema"
            }
          }
        }
      }
    },
    "/admin/user/all": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List all users.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/model.Admin"
              }
            }
          }
        }
      }
    },
    "/admin/user/delete": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete a user.",
        "parameters": [
          {
            "description": "User request",
            "name": "userInfo",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schema.DeleteAdminRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/schema.DeleteAdminResponse"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/schema.DeleteAdminResponse"
            }
          }
        }
      }
    },
    "/admin/user/new": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Add a new user.",
        "parameters": [
          {
            "description": "User request",
            "name": "userRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schema.AddNewAdminRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/schema.AddNewAdminResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/schema.AddNewAdminResponse"
            }
          }
        }
      }
    },
    "/user/all": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List all users.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/model.User"
              }
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Perform login.",
        "parameters": [
          {
            "description": "User request",
            "name": "userRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schema.AuthLoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/schema.AuthLoginResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/schema.CommonFailureSchema"
            }
          }
        }
      }
    },
    "/user/me": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get current user info.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/model.User"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/schema.CommonFailureSchema"
            }
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Register a new user.",
        "parameters": [
          {
            "description": "User request",
            "name": "userRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schema.UserRegisterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/schema.CommonFailureSchema"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/schema.CommonFailureSchema"
            }
          }
        }
      }
    },
    "/user/ticket/all": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List all tickets.",
        "parameters": [
          {
            "type": "integer",
            "description": "Page Size",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Page Count",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/model.Ticket"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/schema.CommonFailureSchema"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/schema.CommonFailureSchema"
            }
          }
        }
      }
    },
    "/user/ticket/unpaid": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List all tickets.",
        "parameters": [
          {
            "type": "integer",
            "description": "Page Size",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Page Count",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/model.Ticket"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/schema.CommonFailureSchema"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/schema.CommonFailureSchema"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "model.Admin": {
      "type": "object",
      "properties": {
        "role": {
          "type": "integer"
        },
        "user_id": {
          "type": "integer"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "model.Ticket": {
      "type": "object",
      "properties": {
        "end_at": {
          "type": "string"
        },
        "fan_speed": {
          "type": "integer"
        },
        "paid": {
          "type": "boolean"
        },
        "service_count": {
          "type": "integer"
        },
        "start_at": {
          "type": "string"
        },
        "target_temperature": {
          "type": "number"
        },
        "ticket_id": {
          "type": "integer"
        },
        "total_fee": {
          "type": "number"
        }
      }
    },
    "model.User": {
      "type": "object",
      "properties": {
        "phone": {
          "type": "string"
        },
        "user_id": {
          "type": "integer"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "schema.AddNewAdminRequest": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        },
        "role": {
          "type": "integer"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "schema.AddNewAdminResponse": {
      "$ref": "#/definitions/schema.CommonFailureSchema"
    },
    "schema.AuthLoginRequest": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "schema.AuthLoginResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "expire": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "schema.CommonFailureSchema": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "schema.DeleteAdminRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        }
      }
    },
    "schema.DeleteAdminResponse": {
      "$ref": "#/definitions/schema.CommonFailureSchema"
    },
    "schema.UserRegisterRequest": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}