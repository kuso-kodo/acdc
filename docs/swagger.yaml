basePath: /api
definitions:
  config.AirConfig:
    properties:
      high_fan_speed_fee_rate:
        type: number
      high_priority_factor:
        type: number
      low_fan_speed_fee_rate:
        type: number
      low_priority_factor:
        type: number
      max_serve_size:
        type: integer
      medium_fan_speed_fee_rate:
        type: number
      medium_priority_factor:
        type: number
      period:
        type: integer
    type: object
  model.Admin:
    properties:
      role:
        type: integer
      user_id:
        type: integer
      username:
        type: string
    type: object
  model.Room:
    properties:
      current_temperature:
        type: number
      fan_speed:
        type: integer
      last_on:
        type: string
      power_on:
        type: boolean
      room_id:
        type: integer
      room_name:
        type: string
      servicing:
        type: boolean
      target_temperature:
        type: number
    type: object
  model.Ticket:
    properties:
      end_at:
        type: string
      fan_speed:
        type: integer
      paid:
        type: boolean
      service_count:
        type: integer
      start_at:
        type: string
      ticket_id:
        type: integer
      total_fee:
        type: number
    type: object
  model.User:
    properties:
      phone:
        type: string
      priority:
        type: integer
      user_id:
        type: integer
      username:
        type: string
    type: object
  schema.AddNewAdminRequest:
    properties:
      password:
        type: string
      role:
        type: integer
      username:
        type: string
    type: object
  schema.AddNewAdminResponse:
    $ref: '#/definitions/schema.CommonStatusSchema'
  schema.AuthLoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  schema.AuthLoginResponse:
    properties:
      code:
        type: integer
      expire:
        type: string
      token:
        type: string
    type: object
  schema.ClientHeartBeatRequest:
    properties:
      current:
        type: number
      mode:
        type: integer
      power:
        type: boolean
      room:
        type: string
      target:
        type: number
      wind:
        type: integer
    type: object
  schema.ClientHeartBeatResponse:
    properties:
      cost:
        type: number
      msg:
        type: string
      status:
        type: integer
      wind:
        type: boolean
    type: object
  schema.ClientRegisterRequest:
    properties:
      room:
        type: string
    type: object
  schema.ClientRegisterResponse:
    properties:
      msg:
        type: string
      period:
        type: integer
      status:
        type: boolean
    type: object
  schema.CommonStatusSchema:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  schema.DeleteAdminRequest:
    properties:
      username:
        type: string
    type: object
  schema.DeleteAdminResponse:
    $ref: '#/definitions/schema.CommonStatusSchema'
  schema.UserRegisterRequest:
    properties:
      password:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  schema.UserTotalFeeResponse:
    properties:
      fee:
        type: number
    type: object
host: localhost:8080
info:
  contact: {}
  description: Simple API Server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: 305E API
  version: "1.0"
paths:
  /admin/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: User request
        in: body
        name: userRequest
        required: true
        schema:
          $ref: '#/definitions/schema.AuthLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.AuthLoginResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
      summary: Perform login.
  /admin/me:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Admin'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
      security:
      - ApiKeyAuth: []
      summary: Get current user info.
  /heartbeat:
    post:
      consumes:
      - application/json
      parameters:
      - description: Client request
        in: body
        name: clientRequest
        required: true
        schema:
          $ref: '#/definitions/schema.ClientHeartBeatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.ClientHeartBeatResponse'
      summary: Handle heartbeat.
  /maintainer/config:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/config.AirConfig'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
      security:
      - ApiKeyAuth: []
      summary: Get air config.
    post:
      consumes:
      - application/json
      parameters:
      - description: User request
        in: body
        name: airConfig
        required: true
        schema:
          $ref: '#/definitions/config.AirConfig'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
      security:
      - ApiKeyAuth: []
      summary: Set air config.
  /maintainer/power/off:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
      summary: Dummy function, make our fucking teacher happy.
  /maintainer/power/on:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
      summary: Dummy function, make our fucking teacher happy.
  /maintainer/room:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Room'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
      security:
      - ApiKeyAuth: []
      summary: List all rooms.
  /receptionist/checkin:
    post:
      parameters:
      - description: User phone number
        in: query
        name: phone
        type: string
      - description: Room name
        in: query
        name: room
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
      security:
      - ApiKeyAuth: []
      summary: Check in user.
  /receptionist/checkout:
    post:
      parameters:
      - description: User phone number
        in: query
        name: phone
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
      security:
      - ApiKeyAuth: []
      summary: Check out user.
  /receptionist/ticket/all:
    get:
      parameters:
      - description: User phone number
        in: query
        name: phone
        type: string
      - description: Page Size
        in: query
        name: page_size
        type: integer
      - description: Page Count
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Ticket'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
      security:
      - ApiKeyAuth: []
      summary: List all tickets by user phone.
  /receptionist/ticket/clear:
    post:
      parameters:
      - description: User phone number
        in: query
        name: phone
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
      security:
      - ApiKeyAuth: []
      summary: Clear all unpaid tickets.
  /receptionist/ticket/fee:
    get:
      parameters:
      - description: User phone number
        in: query
        name: phone
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.UserTotalFeeResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
      security:
      - ApiKeyAuth: []
      summary: List total fee.
  /receptionist/ticket/unpaid:
    get:
      parameters:
      - description: User phone number
        in: query
        name: phone
        type: string
      - description: Page Size
        in: query
        name: page_size
        type: integer
      - description: Page Count
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Ticket'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
      security:
      - ApiKeyAuth: []
      summary: List all tickets by user phone.
  /register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Client request
        in: body
        name: clientRequest
        required: true
        schema:
          $ref: '#/definitions/schema.ClientRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.ClientRegisterResponse'
      summary: Register client.
  /superuser/all:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Admin'
            type: array
      security:
      - ApiKeyAuth: []
      summary: List all users.
  /superuser/delete:
    post:
      consumes:
      - application/json
      parameters:
      - description: User request
        in: body
        name: userInfo
        required: true
        schema:
          $ref: '#/definitions/schema.DeleteAdminRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.DeleteAdminResponse'
        "406":
          description: Not Acceptable
          schema:
            $ref: '#/definitions/schema.DeleteAdminResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a user.
  /superuser/new:
    post:
      consumes:
      - application/json
      parameters:
      - description: User request
        in: body
        name: userRequest
        required: true
        schema:
          $ref: '#/definitions/schema.AddNewAdminRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.AddNewAdminResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schema.AddNewAdminResponse'
      security:
      - ApiKeyAuth: []
      summary: Add a new user.
  /user/all:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
      security:
      - ApiKeyAuth: []
      summary: List all users.
  /user/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: User request
        in: body
        name: userRequest
        required: true
        schema:
          $ref: '#/definitions/schema.AuthLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.AuthLoginResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
      summary: Perform login.
  /user/me:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
      security:
      - ApiKeyAuth: []
      summary: Get current user info.
  /user/priority:
    post:
      parameters:
      - description: Priority Level
        in: query
        name: level
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
      security:
      - ApiKeyAuth: []
      summary: Set user priority.
  /user/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: User request
        in: body
        name: userRequest
        required: true
        schema:
          $ref: '#/definitions/schema.UserRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
      summary: Register a new user.
  /user/ticket/all:
    get:
      parameters:
      - description: Page Size
        in: query
        name: page_size
        type: integer
      - description: Page Count
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Ticket'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
      security:
      - ApiKeyAuth: []
      summary: List all tickets.
  /user/ticket/fee:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.UserTotalFeeResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
      security:
      - ApiKeyAuth: []
      summary: List total fee.
  /user/ticket/unpaid:
    get:
      parameters:
      - description: Page Size
        in: query
        name: page_size
        type: integer
      - description: Page Count
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Ticket'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schema.CommonStatusSchema'
      security:
      - ApiKeyAuth: []
      summary: List all unpaid tickets.
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
