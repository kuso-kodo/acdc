basePath: /api
definitions:
  model.Admin:
    properties:
      role:
        type: integer
      user_id:
        type: integer
      username:
        type: string
    type: object
  schema.AddNewAdminRequest:
    properties:
      password:
        type: string
      role:
        type: integer
      username:
        type: string
    type: object
  schema.AddNewAdminResponse:
    $ref: '#/definitions/schema.CommonFailureSchema'
  schema.AuthLoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  schema.AuthLoginResponse:
    properties:
      code:
        type: integer
      expire:
        type: string
      token:
        type: string
    type: object
  schema.CommonFailureSchema:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  schema.DeleteAdminRequest:
    properties:
      username:
        type: string
    type: object
  schema.DeleteAdminResponse:
    $ref: '#/definitions/schema.CommonFailureSchema'
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /admin/login:
    post:
      consumes:
        - application/json
      parameters:
        - description: User request
          in: body
          name: userRequest
          required: true
          schema:
            $ref: '#/definitions/schema.AuthLoginRequest'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.AuthLoginResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schema.CommonFailureSchema'
      summary: Perform login.
  /admin/me:
    get:
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Admin'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schema.CommonFailureSchema'
      security:
        - ApiKeyAuth: []
      summary: Get current user info.
  /admin/user/all:
    get:
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Admin'
            type: array
      security:
        - ApiKeyAuth: []
      summary: List all users.
  /admin/user/delete:
    post:
      consumes:
        - application/json
      parameters:
        - description: User request
          in: body
          name: userInfo
          required: true
          schema:
            $ref: '#/definitions/schema.DeleteAdminRequest'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.DeleteAdminResponse'
        "406":
          description: Not Acceptable
          schema:
            $ref: '#/definitions/schema.DeleteAdminResponse'
      security:
        - ApiKeyAuth: []
      summary: Delete a user.
  /admin/user/new:
    post:
      consumes:
        - application/json
      parameters:
        - description: User request
          in: body
          name: userRequest
          required: true
          schema:
            $ref: '#/definitions/schema.AddNewAdminRequest'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.AddNewAdminResponse'
        "406":
          description: Not Acceptable
          schema:
            $ref: '#/definitions/schema.AddNewAdminResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schema.AddNewAdminResponse'
      security:
        - ApiKeyAuth: []
      summary: Add a new user.
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
